{"version":3,"sources":["components/Landing.js","utilities.js","components/SignIn.js","components/SignUp.js","components/Login.js","components/Pdf.js","components/Policy.js","constants.js","components/FlexibleBox.js","components/CategoryBadge.js","components/CategoryPicker.js","components/RRuleInterface.js","components/EventPopover.js","components/Calendar.js","components/AvatartList.js","components/PeopleList.js","components/AddPersonDialog.js","components/AvailibilityInterface.js","components/PersonPage.js","components/People.js","components/AppNav.js","components/ClickableCard.js","components/Subscription.js","components/Success.js","components/Basis.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","rootAppBar","flexGrow","toolbar","minHeight","alignItems","paddingTop","spacing","paddingBottom","title","alignSelf","logo","maxWidth","button","margin","heroContent","padding","Landing","classes","history","useHistory","className","AppBar","position","Toolbar","src","alt","Container","component","Typography","variant","align","color","gutterBottom","Button","size","onClick","push","pathLowestLevel","path","index","indexOf","substring","copyObject","obj","_","cloneDeep","localDate","utc","DateTime","fromMillis","setZone","local","zoneName","executeQuery","query","afterQuery","executeAfterQueries","Array","isArray","i","length","sendRequest","data","onResponse","executeQueries","res","axios","post","baseURL","config","url","withCredentials","then","pad","n","width","z","join","rruleDateToDateTime","dateString","timezone","dt","set","year","parseInt","slice","month","day","hour","minute","second","rruleString","rruleObject","start","frequency","interval","count","until","byDay","byMonthDay","bySetPos","byMonth","rrule","toUpperCase","split","upper","lower","left","right","Copyright","Link","href","Date","getFullYear","paper","marginTop","display","flexDirection","avatar","backgroundColor","palette","secondary","main","form","submit","SignIn","props","signInHandler","CssBaseline","Avatar","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","type","email","document","getElementById","value","password","Box","mt","SignUp","signUpHandler","Grid","container","item","xs","Login","setLoggedIn","useState","setQuery","useEffect","window","alert","Pdf","fileName","innerWidth","height","innerHeight","Policy","key","exact","millisecondMap","Set","FlexibleBox","style","justifyContent","flexBasis","flexShrink","flexWrap","flex","children","CategoryBadge","onDeselect","onSelect","selected","category","highlight","disableRipple","CategoryPicker","selectedCategories","cat","categories","setCategories","addingCat","setAddingCat","InputLabel","jsx","makeCategoryBadges","onBlur","trim","categoriesCopy","toLowerCase","addCategory","onKeyDown","e","keyCode","addCatJSX","RRuleInterface","dtStart","setRRule","rruleObj","setFrequency","setInterval","setCount","plus","weeks","setUntil","setByDay","setByMonthDay","setBySetPos","setByMonth","endOption","setEndOption","monthlyOption","setMonthlyOption","yearlyOption","setYearlyOption","finalObj","console","error","frequencyJsx","daySelected","includes","handleClick","byDayCopy","splice","FormLabel","optionJsx","Select","onChange","target","MenuItem","populateMenuItems","byDayString","defaultValue","justify","FormControl","RadioGroup","row","FormControlLabel","control","Radio","checked","labelPlacement","populateDayItems","helperTextFromFreq","helperText","Math","floor","frequencySelect","jsxEnd","utils","LuxonUtils","format","date","fromISO","toFormat","minDate","endSelect","dialog","deleteButton","float","EventPopover","info","eventsArray","updateNewEvent","deleteNewEvent","open","setOpen","event","extendedProps","newName","setNewName","doesRepeat","setDoesRepeat","setCategory","groupId","Dialog","onClose","DialogTitle","idLetter","idNumb","remove","repeatingJsx","newEvent","eventName","newEvents","mirrorElements","Calendar","tier","calendarRef","useRef","refreshCalendar","state","setState","selectedDate","setSelectedDate","eventPopoverOpen","setEventPopoverOpen","currentInfo","setCurrentInfo","states","0","view","isEditable","headerToolbar","center","end","selectable","dateClick","dateStr","changeState","select","slotDuration","snapDuration","contentHeight","firstDate","1","a","startStr","toMillis","distance","max","endStr","addNewEvent","2","hours","events","current","getApi","getEvents","clearCalendarEvents","addEventToCalendar","updatedEvent","log","api","addEvent","colors","primary","borderColor","textColor","contrastText","dtstart","toISO","duration","milliseconds","Interval","fromDateTimes","personName","newState","nextDate","changeView","onCalendarEventChange","difference","ref","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","rrulePlugin","luxonPlugin","timeZone","initialView","initialDate","firstDay","eventResizableFromStart","longPressDelay","editable","eventDidMount","isMirror","el","addEventListener","handleMirror","eventDrop","eventResize","eventClick","customButtons","monthButton","text","click","weekButton","currentMonth","currentWeek","currentDay","applyButton","root","background","getContrastText","light","AvatarList","inputObjects","onAdd","addString","List","dense","jsxList","ListItem","ListItemAvatar","avatarChildren","ListItemText","ListItemSecondaryAction","onDelete","IconButton","listItemsJsx","PeopleList","people","person","objects","catJsx","generateInputObjects","AddPersonDialog","handleClose","DialogContent","DialogActions","createEvent","availability","AvailibilityInterface","availabilities","onRemove","setEvents","setIndex","dialogOpen","setDialogOpen","setHeaderToolbar","setChecked","newRule","setNewRule","localChange","eventIndex","diff","toString","createEvents","content","views","timeGridWeek","eventsCopy","dayGridMonth","getDate","rruleJsx","removeIndex","localRemove","dialogJsx","fontSize","PersonPage","onChangeName","onCategorySelect","onCategoryDeselect","onAddAvailability","onChangeAvailability","onRemoveAvailibility","handleChangeName","preventDefault","blur","People","setPeople","currentName","setCurrentName","personOpen","setPersonOpen","utcStart","utcEnd","oldName","newPeople","tabs","scheduleName","emptyBar","marginBottom","scheduleNameTheme","createMuiTheme","AppNav","schedule","setSchedule","anchorEl","setAnchorEl","location","useLocation","ThemeProvider","multiline","InputProps","oldScheduleName","newScheduleName","Tabs","pathname","pathroot","validTabPath","newValue","centered","fullwidth","Tab","icon","currentTarget","Menu","anchorOrigin","vertical","horizontal","transformOrigin","freeTierName","cardHeader","grey","cardPricing","ClickableCard","subheader","price","description","buttonText","buttonVariant","star","onButtonClick","Card","CardHeader","titleTypographyProps","subheaderTypographyProps","action","CardContent","map","line","CardActions","cards","Subscription","currentTier","upgradeTier","stripePromise","loadStripe","stripe","publicKey","response","session","redirectToCheckout","sessionId","result","message","tierName","tiers","sm","md","charAt","tierCardsJsx","Success","setTier","setJsx","URLSearchParams","search","get","billingOnClick","req","Jumbotron","Basis","loggedIn","appName","App","documentElement","setProperty","setColors","Fragment","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.13ab1e16.chunk.js","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  rootAppBar: {\n    flexGrow: 1,\n  },\n  toolbar: {\n    minHeight: 128,\n    alignItems: 'flex-start',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  title: {\n    flexGrow: 1,\n    alignSelf: 'flex-end',\n  },\n  logo: {\n      maxWidth: \"20%\",\n      alignSelf: 'flex-end'\n  },\n  button: {\n    margin: \"10px\"\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  }\n}));\n\nfunction Landing() {\n    const classes = useStyles();\n    let history = useHistory();\n    return (\n        <div>\n            <div className={classes.rootAppBar}>\n                <AppBar position=\"static\">\n                    <Toolbar className={classes.toolbar}>\n                    <img className={classes.logo} src={\"/logo-secondary.png\"} alt=\"logo\" />\n                    {/* <Typography className={classes.title} variant=\"h5\" noWrap>\n                        Scheduling simplified\n                    </Typography> */}\n                    </Toolbar>\n                </AppBar>\n            </div>\n            <Container maxWidth=\"lg\" component=\"main\" className={classes.heroContent}>\n                <Typography  variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                    Create a Schedule\n                </Typography>\n                \n                <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                Plandid is an easy scheduling app for groups. Create tasks and add people to your schedule. Plandid will automatically match tasks to people based on availibility and category\n                </Typography>\n                <Typography align=\"center\">\n                  <Button size=\"large\" className={classes.button} onClick={function() {history.push('/Login')}} variant=\"contained\" color=\"primary\">Login</Button>\n                </Typography>\n            </Container>\n        </div>\n    );\n}\n\nexport default Landing;","import axios from 'axios';\nimport _ from \"lodash\"\nimport config from './config.json';\nimport { DateTime } from 'luxon';\n\nfunction eventFire(el, etype){\n    if (el.fireEvent) {\n        el.fireEvent('on' + etype);\n    } else {\n        var evObj = document.createEvent('Events');\n        evObj.initEvent(etype, true, false);\n        el.dispatchEvent(evObj);\n    }\n}\n\nfunction randomColor(seed=null) {\n    return `#${Math.floor(Math.random()*16777215).toString(16)}`;\n}\n\nfunction pathLowestLevel(path) {\n    let index = path.indexOf('/', 1);\n    return index !== -1 ? path.substring(0, index + 1) : path;\n}\n\nfunction invert(obj) {\n    return _.invert(obj);\n}\n\nfunction copyObject(obj) {\n    return _.cloneDeep(obj);\n}\n\nfunction modulo(n, m) {\n    return ((n % m) + m) % m;\n}\n\nfunction localDateFromValues({\n    year = DateTime.local().year,\n    month = DateTime.local().month, // starts at 1\n    day = DateTime.local().day, // starts at 1\n    hour = 0,\n    minute = 0,\n    second = 0,\n    millisecond = 0,\n    weekday = null, // starts at 1\n} = {}) {\n    if (weekday !== null) {\n        let dt = DateTime.local(year, month, day);\n        return dt.set({weekday: weekday, hour: hour, minute: minute, second: second, millisecond: millisecond});\n    }\n    else {\n        return DateTime.local(year, month, day, hour, minute, second, millisecond);\n    }\n}\n\nfunction localDate(utc) {\n    return DateTime.fromMillis(utc).setZone(DateTime.local().zoneName);\n}\n\nfunction localWeekTime(weekMillis) {\n    return {\n        totalMilliseconds: modulo(weekMillis + (DateTime.local().offset * 60000), 604800000),\n        weekday: function() {\n            if (this.totalMilliseconds === 0) {\n                return 1;\n            }\n            else {\n                return Math.floor(this.totalMilliseconds / 86400000) + 1;\n            }\n        },\n        hour: function() {\n            if (this.totalMilliseconds === 0) {\n                return 0;\n            }\n            else {\n                return modulo(Math.floor(this.totalMilliseconds / 3600000), 24);\n            }\n        },\n        minute: function() {\n            if (this.totalMilliseconds === 0) {\n                return 0;\n            }\n            else {\n                return modulo(Math.floor(this.totalMilliseconds / 60000), 60);\n            }\n        },\n        second: function() {\n            if (this.totalMilliseconds === 0) {\n                return 0;\n            }\n            else {\n                return modulo(Math.floor(this.totalMilliseconds / 1000), 60);\n            }\n        },\n        millisecond: function() {\n            if (this.totalMilliseconds === 0) {\n                return 0;\n            }\n            else {\n                return modulo(this.totalMilliseconds, 1000);\n            }\n        },\n        toLocaleString: function(format=null) {\n            if (format === null) {\n                return DateTime.local().set({weekday: this.weekday(), hour: this.hour(), minute: this.minute(), second: this.second(), millisecond: this.millisecond()}).toLocaleString();\n            }\n            else {\n                return DateTime.local().set({weekday: this.weekday(), hour: this.hour(), minute: this.minute(), second: this.second(), millisecond: this.millisecond()}).toLocaleString(format);\n            }\n        }\n    };\n}\n\nfunction executeQuery(query=null, afterQuery=null) {\n    function executeAfterQueries() {\n        if (afterQuery !== null) {\n            if (Array.isArray(afterQuery)) {\n                for (let i = 0; i < afterQuery.length; i++) {\n                    if (\"onResponse\" in afterQuery[i]) {\n                        sendRequest(afterQuery[i].path, afterQuery[i].data || {}, afterQuery[i].onResponse);\n                    }\n                    else {\n                        sendRequest(afterQuery[i].path, afterQuery[i].data || {});\n                    }\n                }\n            }\n            else {\n                if (\"onResponse\" in afterQuery) {\n                    sendRequest(afterQuery.path, afterQuery.data || {}, afterQuery.onResponse);\n                }\n                else {\n                    sendRequest(afterQuery.path, afterQuery.data || {});\n                }\n            }\n        }\n    }\n    function executeQueries() {\n        if (Array.isArray(query)) {\n            for (let i = 0; i < query.length; i++) {\n                if (i === query.length - 1) {\n                    sendRequest(query[i].path, query[i].data || {}, (res) => {\n                        if (\"onResponse\" in query) {\n                            query[i].onResponse(res);\n                        }\n                        executeAfterQueries();\n                    });\n                }\n                else {\n                    if (\"onResponse\" in query[i]) {\n                        sendRequest(query[i].path, query[i].data || {}, query[i].onResponse);\n                    }\n                    else {\n                        sendRequest(query[i].path, query[i].data || {});\n                    }\n                }\n            }\n        }\n        else {\n            sendRequest(query.path, query.data || {}, (res) => {\n                if (\"onResponse\" in query) {\n                    query.onResponse(res);\n                }\n                executeAfterQueries();\n            });\n        }\n    }\n    return function() {\n        if (query !== null) {\n            executeQueries();\n        }\n        else {\n            executeAfterQueries();\n        }\n    };\n}\n\n// onResponse takes a response argument.\nfunction sendRequest(path, data, onResponse=res => {}) {\n    axios.post(path, data, {baseURL: config.url, withCredentials: true}).then(res => onResponse(res));\n}\n\nfunction variantFromCategory(category, defaultVariant=\"\") {\n    let variant = variants[category];\n    if (variant === undefined) {\n        return defaultVariant;\n    }\n    else {\n        return variant;\n    }\n}\n\nconst categoryMap = {\n    primary: 0,\n    secondary: 1,\n    success: 2,\n    warning: 3,\n    danger: 4,\n    info: 5,\n    dark: 6\n}\n\nconst variants = [\"primary\", \"secondary\", \"success\", \"warning\", \"danger\", \"info\", \"dark\"];\n\n// Assumes range2.start <= range2.end\nfunction insideRange(range1, range2, startKey=\"start\", endKey=\"end\") {\n    return range1[startKey] >= range2[startKey] && range1[endKey] <= range2[endKey];\n}\n\nfunction rangesOverlap(range1, range2, startKey=\"start\", endKey=\"end\") {\n    return (range1[startKey] >= range2[startKey] && range1[startKey] <= range2[endKey]) || (range1[endKey] <= range2[endKey] && range1[endKey] >= range2[startKey]);\n}\n\n// Assumes list is sorted\nfunction overlapSearch(item, list, startKey=\"start\", endKey=\"end\") {\n    for (let i = 0; i < list.length; i++) {\n        if (rangesOverlap(item, list[i], startKey, endKey)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction pad(n, width, z) {\n    z = z || '0';\n    n = n + '';\n    return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nfunction rruleDateToDateTime(dateString, timezone=null) {\n    let dt = DateTime.local();\n    if (timezone) dt.setZone(timezone);\n    dt = dt.set({\n        year: parseInt(dateString.slice(0, 4)), \n        month: parseInt(dateString.slice(4, 6)), \n        day: parseInt(dateString.slice(6, 8)), \n        hour: parseInt(dateString.slice(9, 11)), \n        minute: parseInt(dateString.slice(11, 13)), \n        second: parseInt(dateString.slice(13, 15))\n    });\n    return dt;\n}\n\n/* Function behavior is undefined if start and until timezones are not the same.\nWhatever parameters you put in will go into the string even if it's no longer a valid rrule.\nNotes: bySetPos can be -1, in this case it matches the last of that day for that month. */\nfunction rruleString(rruleObject=null) {\n    const {\n        start=DateTime.local(), \n        frequency=\"DAILY\", \n        interval=1, \n        count=null, \n        until=null, \n        byDay=null, \n        byMonthDay=null, \n        bySetPos=null, \n        byMonth=null\n    } = rruleObject;\n\n    let rrule = `DTSTART;TZID=${start.zoneName}:${pad(start.year, 4)}${pad(start.month, 2)}${pad(start.day, 2)}T${pad(start.hour, 2)}${pad(start.minute, 2)}${pad(start.second, 2)}\\nRRULE:FREQ=${frequency.toUpperCase()};INTERVAL=${interval}`;\n    if (count) rrule += `;COUNT=${count}`;\n    else if (until) rrule += `;UNTIL=${pad(until.year, 4)}${pad(until.month, 2)}${pad(until.day, 2)}T${pad(until.hour, 2)}${pad(until.minute, 2)}${pad(until.second, 2)}`;\n    switch (frequency) {\n        case \"WEEKLY\":\n            if (byDay && byDay.length > 0) rrule += `;BYDAY=${Array.isArray(byDay) ? byDay.join().toUpperCase() : byDay}`;\n            else rrule += \";BYDAY=MO\";\n            break;\n        case \"MONTHLY\":\n            if (byMonthDay) rrule += `;BYMONTHDAY=${byMonthDay}`;\n            else if (bySetPos && byDay && byDay.length > 0) {\n                rrule += `;BYSETPOS=${bySetPos}`;\n                rrule += `;BYDAY=${Array.isArray(byDay) ? byDay.join().toUpperCase() : byDay}`;\n            }\n            else rrule += \";BYMONTHDAY=1\";\n            break;\n        case \"YEARLY\":\n            if (byMonth && byMonthDay) {\n                rrule += `;BYMONTH=${byMonth}`;\n                rrule += `;BYMONTHDAY=${byMonthDay}`;\n            }\n            else if (byMonth && bySetPos && byDay && byDay.length > 0) {\n                rrule += `;BYMONTH=${byMonth}`;\n                rrule += `;BYSETPOS=${bySetPos}`;\n                rrule += `;BYDAY=${Array.isArray(byDay) ? byDay.join().toUpperCase() : byDay}`;\n            }\n            else rrule += \";BYMONTH=1;BYMONTHDAY=1\";\n            break;\n        default:\n            break;\n    }\n    \n    // if (byDay) rrule += `;BYDAY=${Array.isArray(byDay) ? byDay.join().toUpperCase() : byDay}`;\n    // if (byMonthDay) rrule += `;BYMONTHDAY=${byMonthDay}`;\n    // if (bySetPos) rrule += `;BYSETPOS=${bySetPos}`;\n    // if (byMonth) rrule += `;BYMONTH=${byMonth}`;\n\n    return rrule;\n}\n\nfunction rruleObject(rruleString=null) {\n    let rrule = {start: DateTime.local(), frequency: \"DAILY\", interval: 1, count: null, until: null, byDay: null, byMonthDay: null, bySetPos: null, byMonth: null};\n    if (rruleString === null) return rrule;\n\n    let [upper, lower] = rruleString.split('\\n');\n    upper = upper.split('=')[1].split(':');\n    lower = lower.split(':')[1].split(';');\n\n    rrule.start = rruleDateToDateTime(upper[1], upper[0]);\n\n    for (let i = 0; i < lower.length; i++) {\n        const [left, right] = lower[i].split('=');\n        switch (left) {\n            case \"FREQ\":\n                rrule.frequency = right;\n                break;\n            case \"INTERVAL\":\n                rrule.interval = parseInt(right);\n                break;\n            case \"COUNT\":\n                rrule.count = parseInt(right);\n                break;\n            case \"UNTIL\":\n                rrule.until = rruleDateToDateTime(right);\n                break;\n            case \"BYDAY\":\n                rrule.byDay = right.split(',');\n                break;\n            case \"BYMONTHDAY\":\n                rrule.byMonthDay = parseInt(right);\n                break;\n            case \"BYSETPOS\":\n                rrule.bySetPos = parseInt(right);\n                break;\n            case \"BYMONTH\":\n                rrule.byMonth = parseInt(right);\n                break;\n            default:\n                break;\n        }\n    }\n\n    return rrule;\n}\n\nexport {\n    eventFire,\n    executeQuery,\n    sendRequest,\n    categoryMap,\n    variants,\n    variantFromCategory,\n    localDate,\n    localDateFromValues,\n    localWeekTime,\n    modulo,\n    copyObject,\n    insideRange,\n    rangesOverlap,\n    overlapSearch,\n    pad,\n    rruleString,\n    rruleObject,\n    invert,\n    pathLowestLevel,\n    randomColor,\n}","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\n// import Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://plandid.app/\">\n        Plandid LLC\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn(props) {\n    const {signInHandler} = props;\n  const classes = useStyles();\n\n  function handleSignIn() {\n    let email = document.getElementById(\"signin-email\").value;\n    let password = document.getElementById(\"signin-password\").value;\n    signInHandler(email, password);\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"signin-email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"signin-password\"\n            autoComplete=\"current-password\"\n          />\n          {/* <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleSignIn}\n          >\n            Sign In\n          </Button>\n          {/* <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid> */}\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://plandid.app/\">\n          Plandid LLC\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp(props) {\n    const {signUpHandler} = props;\n  const classes = useStyles();\n\n  function handleSignUp() {\n    let email = document.getElementById(\"signup-email\").value;\n    let password = document.getElementById(\"signup-password\").value;\n    signUpHandler(email, password);\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            {/* <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid> */}\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"signup-email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"signup-password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            {/* <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid> */}\n          </Grid>\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleSignUp}\n          >\n            Sign Up\n          </Button>\n          {/* <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid> */}\n        </form>\n      </div>\n      <Box mt={3}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { executeQuery } from '../utilities';\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  rootAppBar: {\n    flexGrow: 1,\n  },\n  toolbar: {\n    minHeight: 128,\n    alignItems: 'flex-start',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  title: {\n    flexGrow: 1,\n    alignSelf: 'flex-end',\n  },\n  logo: {\n      maxWidth: \"20%\"\n  }\n}));\n\n\nfunction Login({setLoggedIn=() => {}}) {\n    const [query, setQuery] = useState(null);\n    let history = useHistory();\n\n    const classes = useStyles();\n\n    // eslint-disable-next-line\n    useEffect(executeQuery(query), [query]);\n\n    function signUpHandler(email, password) {\n        setQuery({\n            path: \"/publicPost/signUp\",\n            data: {email: email, password: password},\n            onResponse: (res) => {\n                switch(res.data) {\n                    case 0:\n                        window.alert(`Email verification sent to ${email}`);\n                        break;\n                    case 1:\n                        window.alert('Account already exists.');\n                        break;\n                    case 2:\n                        window.alert('Verification already sent to this email.');\n                        break;\n                    default:\n                        window.alert(res.data);\n                        break;\n                }\n            }\n        });\n    }\n\n    function loginHandler(email, password) {\n        setQuery({\n            path: \"/publicPost/login\",\n            data: {email: email, password: password},\n            onResponse: (res) => {\n                switch(res.data) {\n                    case 0:\n                        setLoggedIn(true);\n                        history.push(\"/Calendar\");\n                        break;\n                    case 1:\n                        window.alert('Email or password is incorrect.');\n                        break;\n                    default:\n                        window.alert(res.data);\n                        break;\n                }\n            }\n        });\n    }\n\n    return (\n        <div>\n            <div className={classes.rootAppBar}>\n                <AppBar position=\"static\">\n                    <Toolbar className={classes.toolbar}>\n                        <img className={classes.logo} src={\"/logo-secondary.png\"} alt=\"logo\" />\n                    </Toolbar>\n                </AppBar>\n            </div>\n            <Grid container spacing={3}>\n                <Grid item xs={6}>\n                    <SignUp signUpHandler={signUpHandler} />\n                </Grid>\n                <Grid item xs={6}>\n                    <SignIn signInHandler={loginHandler} />\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default Login;\n","import React from \"react\";\n\nfunction Pdf({fileName=\"\"}) {\n    return (\n        <iframe title={fileName} src={fileName} width={`${window.innerWidth}px`} height={`${window.innerHeight}px`}></iframe>\n    );\n}\n\nexport default Pdf;","import React from \"react\";\nimport {Route} from 'react-router-dom';\nimport config from '../config.json';\n\nimport Pdf from \"./Pdf\";\n\nfunction Policy() {\n    return [\n        <Route key={0} exact path =\"/PrivacyPolicy\">\n            <Pdf fileName={config.url + \"/policy/privacy_policy.pdf\"}/>\n        </Route>,\n        <Route key={1} exact path =\"/TermsOfService\">\n            <Pdf fileName={config.url + \"/policy/terms_of_service.pdf\"}/>\n        </Route>,\n        <Route key={2} exact path =\"/CookiePolicy\">\n            <Pdf fileName={config.url + \"/policy/cookie_policy.pdf\"}/>\n        </Route>\n    ];\n}\n\nexport default Policy;","const categoriesSet = new Set([0, 1, 2, 3, 4, 5, 6]);\n\nconst millisecondMap = {\n    week: 604800000,\n    day: 86400000,\n    hour: 3600000,\n    minute: 60000,\n    second: 1000\n};\n\nexport {\n    categoriesSet,\n    millisecondMap\n}","import React from \"react\";\n\nfunction FlexibleBox(props) {\n    return (\n        <div\n        className={props.className}\n        style={{\n          display: props.container ? 'flex' : 'block',\n          justifyContent: props.justifyContent || 'flex-start',\n          flexDirection: props.flexDirection || 'row',\n          flexGrow: props.flexGrow || 0,\n          flexBasis: props.flexBasis || 'auto',\n          flexShrink: props.flexShrink || 1,\n          flexWrap: props.flexWrap || 'wrap',\n          flex: props.flex || '0 1 auto',\n          alignItems: props.alignItems || 'stretch',\n          margin: props.margin || '0',\n          padding: props.padding || '0',\n          width: props.width || 'auto',\n          height: props.height || 'auto',\n          maxWidth: props.maxWidth || 'none'\n        }}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default FlexibleBox;","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction CategoryBadge({onDeselect=() => {}, onSelect=() => {}, selected=false, category=null, highlight=true}) {\n    return (\n        <Button \n        onClick={selected ? onDeselect : onSelect} \n        color=\"secondary.light\"\n        variant={selected ? \"contained\" : \"outlined\"}\n        disableRipple={!highlight}\n\n        >\n            {category}\n        </Button>\n    );\n}\n\nexport default CategoryBadge;","import React, {useState, useEffect} from \"react\";\n// import { Form, Button } from 'react-bootstrap';\nimport AddIcon from '@material-ui/icons/Add';\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport {executeQuery, copyObject} from \"../utilities\";\n\nimport FlexibleBox from \"./FlexibleBox\";\nimport CategoryBadge from \"./CategoryBadge\";\n\nfunction CategoryPicker({selectedCategories={}, onSelect=cat => {}, onDeselect=cat => {}}) {\n    const [query, setQuery] = useState(null);\n    const [categories, setCategories] = useState(null);\n    const [addingCat, setAddingCat] = useState(false);\n\n    // eslint-disable-next-line\n    useEffect(executeQuery(query, {path: \"/categories/getCategories\", data: {}, onResponse: (res) => {\n        setCategories(res.data);\n    }}), [query]);\n\n    function makeCategoryBadges() {\n        let jsx = [];\n        for (let cat in categories) {\n            jsx.push(<CategoryBadge \n                selected={cat in selectedCategories} \n                category={cat} \n                onSelect={() => onSelect(cat)} \n                onDeselect={() => onDeselect(cat)} \n                />\n            );\n        }\n        return jsx;\n    }\n\n    function addCategory(category) {\n        let categoriesCopy = copyObject(categories);\n        categoriesCopy[category.trim().toLowerCase()] = \"\";\n        setCategories(categoriesCopy);\n        setQuery({path: \"/categories/addCategory\", data: {category: category}});\n    }\n\n    function addCatJSX() {\n        if (addingCat) {\n            function onBlur() {\n                const name = document.getElementById(\"add-cat\").value.trim();\n                if (name && name.length > 0 && name !== '+') {\n                    addCategory(name);\n                }\n                setAddingCat(false);\n            }\n            return <TextField onKeyDown={(e) => {if (e.keyCode === 13) {onBlur()}}} onBlur={onBlur} label=\"New Category\" autoFocus id=\"add-cat\" />;\n        }\n        else {\n            return <Button variant=\"outlined\" color=\"secondary.light\" onClick={() => {setAddingCat(true)}}><AddIcon /></Button>\n        }\n    }\n\n    return (\n        <div>\n            <InputLabel>Categories</InputLabel>\n            <InputLabel>Only people who have the selected category can work this task.</InputLabel>\n            <FlexibleBox>{makeCategoryBadges()}{addCatJSX()}</FlexibleBox>\n        </div>\n    )\n}\n\nexport default CategoryPicker;","import React, {useEffect, useState} from \"react\";\nimport { DateTime } from \"luxon\";\nimport {rruleString, rruleObject, copyObject} from \"../utilities\";\n\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from \"@material-ui/pickers\";\nimport LuxonUtils from \"@date-io/luxon\";\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FlexibleBox from \"./FlexibleBox\";\n\nexport default function RRuleInterface(props) {\n    const {dtStart=DateTime.local(), rrule=\"\", setRRule=rrule => {}} = props;\n    const rruleObj = rruleObject(rrule);\n    const [frequency, setFrequency] = useState(rrule ? rruleObj.frequency : \"WEEKLY\");\n    const [interval, setInterval] = useState(rrule ? rruleObj.interval : 1);\n    const [count, setCount] = useState(rrule ? rruleObj.count : 1);\n    const [until, setUntil] = useState(rrule ? rruleObj.until : DateTime.local().plus({weeks: 1}));\n    const [byDay, setByDay] = useState(rrule ? rruleObj.byDay : [\"MO\"]);\n    const [byMonthDay, setByMonthDay] = useState(rrule ? rruleObj.byMonthDay : DateTime.local().day);\n    const [bySetPos, setBySetPos] = useState(rrule ? rruleObj.bySetPos : 1);\n    const [byMonth, setByMonth] = useState(rrule ? rruleObj.byMonth : DateTime.local().month);\n\n    const [endOption, setEndOption] = useState(rruleObj.until ? \"UNTIL\" : (rruleObj.count ? \"COUNT\" : \"NONE\"));\n    const [monthlyOption, setMonthlyOption] = useState(rruleObj.frequency === \"MONTHLY\" && rruleObj.byMonthDay ? \"BYMONTHDAY\" : \"BYSETPOS\");\n    const [yearlyOption, setYearlyOption] = useState(rruleObj.frequency === \"YEARLY\" && rruleObj.byMonthDay ? \"BYMONTHDAY\" : \"BYSETPOS\");\n\n    useEffect(function() { // If there are problems, this needs to only set the new rrule with appropriate tokens based on the frequency.\n        let finalObj = {};\n        finalObj.start = dtStart;\n        finalObj.frequency = frequency;\n        finalObj.interval = interval;\n\n        switch (frequency) {\n            case \"HOURLY\":\n                break;                \n            case \"DAILY\":\n                break;\n            case \"WEEKLY\":\n                finalObj.byDay = byDay;\n                break;\n            case \"MONTHLY\":\n                switch (monthlyOption) {\n                    case \"BYMONTHDAY\":\n                        finalObj.byMonthDay = byMonthDay;\n                        break;\n                    case \"BYSETPOS\":\n                        finalObj.byDay = byDay;\n                        finalObj.bySetPos = bySetPos;\n                        break;\n                    default:\n                        console.error(\"RRuleInterface: frequency monthlyOption default\");\n                        break;\n                }\n                break;\n            case \"YEARLY\":\n                finalObj.byMonth = byMonth;\n                switch (yearlyOption) {\n                    case \"BYMONTHDAY\":\n                        finalObj.byMonthDay = byMonthDay;\n                        break;\n                    case \"BYSETPOS\":\n                        finalObj.byDay = byDay;\n                        finalObj.bySetPos = bySetPos;\n                        break;\n                    default:\n                        console.error(\"RRuleInterface: frequency yearlyOption default\");\n                        break;\n                }\n                break;\n            default:\n                console.error(\"RRuleInterface: frequency default\");\n        }\n\n        switch (endOption) {\n            case \"COUNT\":\n                finalObj.count = count;\n                break;\n            case \"UNTIL\":\n                finalObj.until = until;\n                break;\n            default:\n                break;\n        }\n\n        setRRule(rruleString(finalObj));\n    }, [frequency, interval, count, until, byDay, byMonthDay, bySetPos, byMonth, dtStart, setRRule, endOption, monthlyOption, yearlyOption]);\n\n    function frequencySelect() {\n        const helperTextFromFreq = {\n            \"YEARLY\": \"years\",\n            \"MONTHLY\": \"months\",\n            \"WEEKLY\": \"weeks\",\n            \"DAILY\": \"days\",\n            \"HOURLY\": \"hours\"\n        }\n        return (\n            <FormControl>\n                <FormLabel>Repeat</FormLabel>\n                <Select label=\"Repeat\" value={frequency} defaultValue=\"DAILY\" onChange={e => setFrequency(e.target.value)}>\n                    <MenuItem value=\"YEARLY\">Yearly</MenuItem>\n                    <MenuItem value=\"MONTHLY\">Monthly</MenuItem>\n                    <MenuItem value=\"WEEKLY\">Weekly</MenuItem>\n                    <MenuItem value=\"DAILY\">Daily</MenuItem>\n                    <MenuItem value=\"HOURLY\">Hourly</MenuItem>\n                </Select>\n                <TextField \n                label=\"Every\"\n                type=\"number\"\n                helperText={interval > 1 ? helperTextFromFreq[frequency] : helperTextFromFreq[frequency].slice(0, helperTextFromFreq[frequency].length - 1)}\n                defaultValue={interval} \n                onChange={e => setInterval(parseInt(e.target.value) >= 1 ? Math.floor(parseInt(e.target.value)) : 1)}\n                />\n            </FormControl>\n        );\n    }\n\n    function endSelect() {\n        let jsxEnd = <div></div>;\n        switch (endOption) {\n            case \"COUNT\":\n                jsxEnd = (\n                    <TextField \n                    type=\"number\"\n                    defaultValue={count || 1}\n                    helperText={count > 1 ? \"Times\" : \"Time\"}\n                    onChange={e => setCount(parseInt(e.target.value) >= 1 ? Math.floor(parseInt(e.target.value)) : 1)}\n                    />\n                );\n                break;\n            case \"UNTIL\":\n                jsxEnd = (\n                    <MuiPickersUtilsProvider utils={LuxonUtils}>\n                        <KeyboardDatePicker\n                            format=\"yyyy-MM-dd\"\n                            onChange={date => setUntil(DateTime.fromISO(date))}\n                            value={until ? until.toFormat(\"yyyy-MM-dd\") : DateTime.local().toFormat(\"yyyy-MM-dd\")}\n                            minDate={DateTime.local().toFormat(\"yyyy-MM-dd\")}\n                        />\n                    </MuiPickersUtilsProvider>\n                );\n                break;\n            case \"NONE\":\n                break;\n            default:\n                console.error(\"RRuleInterface: endSelect default case\");\n                break;\n        }\n\n        return (\n            <FormControl>\n                <FormLabel>Stops Repeating</FormLabel>\n                <Select label=\"End\" value={endOption} defaultValue={1} onChange={e => setEndOption(e.target.value)}>\n                    <MenuItem value=\"NONE\">Never</MenuItem>\n                    <MenuItem value=\"COUNT\">After</MenuItem>\n                    <MenuItem value=\"UNTIL\">On Date</MenuItem>\n                </Select>\n                {jsxEnd}\n            </FormControl>\n        );\n    }\n\n    function weekly() {\n        function daySelected(day) {\n            if (Array.isArray(byDay)) return byDay.includes(day);\n            else byDay.split(',').includes(day);\n        }\n\n        function handleClick(day) {\n            let byDayCopy = copyObject(byDay);\n            if (!Array.isArray(byDayCopy)) byDayCopy = byDayCopy.split(',');\n            if (!daySelected(day)) byDayCopy.push(day);\n            else if (byDayCopy.length > 1) byDayCopy.splice(byDayCopy.indexOf(day), 1);\n            setByDay(byDayCopy);\n        }\n\n        if (!byDay) setByDay(\"MO\");\n        return [\n            <FormLabel>Week Days</FormLabel>,\n            <FlexibleBox>\n                <Button color=\"primary\" onClick={() => handleClick(\"MO\")} variant={daySelected(\"MO\") ? \"contained\" : \"outlined\"}>Monday</Button>\n                <Button color=\"primary\" onClick={() => handleClick(\"TU\")} variant={daySelected(\"TU\") ? \"contained\" : \"outlined\"}>Tuesday</Button>\n                <Button color=\"primary\" onClick={() => handleClick(\"WE\")} variant={daySelected(\"WE\") ? \"contained\" : \"outlined\"}>Wednesday</Button>\n                <Button color=\"primary\" onClick={() => handleClick(\"TH\")} variant={daySelected(\"TH\") ? \"contained\" : \"outlined\"}>Thursday</Button>\n                <Button color=\"primary\" onClick={() => handleClick(\"FR\")} variant={daySelected(\"FR\") ? \"contained\" : \"outlined\"}>Friday</Button>\n                <Button color=\"primary\" onClick={() => handleClick(\"SA\")} variant={daySelected(\"SA\") ? \"contained\" : \"outlined\"}>Saturday</Button>\n                <Button color=\"primary\" onClick={() => handleClick(\"SU\")} variant={daySelected(\"SU\") ? \"contained\" : \"outlined\"}>Sunday</Button>\n            </FlexibleBox>\n        ];\n    }\n\n    function monthly() {\n        function populateMenuItems() {\n            let jsx = [];\n            for (let i = 1; i < 32; i++) jsx.push(<MenuItem value={i}>{i}</MenuItem>);\n            return jsx;\n        }\n\n        let optionJsx =<div></div>;\n        switch (monthlyOption) {\n            case \"BYMONTHDAY\":\n                optionJsx = [\n                    <FormLabel>Day of the Month</FormLabel>,\n                    <Select value={byMonthDay} onChange={e => setByMonthDay(parseInt(e.target.value))}>\n                        {populateMenuItems()}\n                    </Select>\n                ];\n                break;\n            case \"BYSETPOS\":\n                let byDayString = copyObject(byDay);\n                if (Array.isArray(byDay)) byDayString = byDayString.join(',');\n                optionJsx = [\n                    <Select value={bySetPos} defaultValue={1} onChange={e => setBySetPos(parseInt(e.target.value))}>\n                        <MenuItem value={1}>First</MenuItem>\n                        <MenuItem value={2}>Second</MenuItem>\n                        <MenuItem value={3}>Third</MenuItem>\n                        <MenuItem value={4}>Fourth</MenuItem>\n                        <MenuItem value={-1}>Last</MenuItem>\n                    </Select>,\n                    <Select value={byDayString} defaultValue={1} onChange={e => setByDay(e.target.value.split(','))}>\n                        <MenuItem value={\"MO\"}>Monday</MenuItem>\n                        <MenuItem value={\"TU\"}>Tuesday</MenuItem>\n                        <MenuItem value={\"WE\"}>Wednesday</MenuItem>\n                        <MenuItem value={\"TH\"}>Thursday</MenuItem>\n                        <MenuItem value={\"FR\"}>Friday</MenuItem>\n                        <MenuItem value={\"SA\"}>Saturday</MenuItem>\n                        <MenuItem value={\"SU\"}>Sunday</MenuItem>\n                        <MenuItem value={\"MO,TU,WE,TH,FR,SA,SU\"}>Day</MenuItem>\n                        <MenuItem value={\"MO,TU,WE,TH,FR\"}>Weekday</MenuItem>\n                        <MenuItem value={\"SA,SU\"}>Weekend Day</MenuItem>\n                    </Select>\n                ];\n                break;\n            default:\n                console.error(\"RRuleInterface: monthlyOption default case\");\n                break;\n        }\n        return (\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <FormControl component=\"fieldset\">\n                        <RadioGroup row name=\"position\" value={monthlyOption === \"BYMONTHDAY\" ? \"left\" : \"right\"} defaultValue=\"left\">\n                            <FormControlLabel\n                            value=\"left\"\n                            control={<Radio onChange={e => {if (e.target.checked) setMonthlyOption(\"BYMONTHDAY\")}} color=\"primary\" />}\n                            label=\"On Day\"\n                            labelPlacement=\"top\"\n                            />\n                            <FormControlLabel\n                            value=\"right\"\n                            control={<Radio onChange={e => {if (e.target.checked) setMonthlyOption(\"BYSETPOS\")}} color=\"primary\" />}\n                            label=\"On The\"\n                            labelPlacement=\"top\"\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12}>\n                    {optionJsx}\n                </Grid>\n            </Grid>\n        );\n    }\n\n    function yearly() {\n        function populateDayItems() {\n            let jsx = [];\n            for (let i = 1; i < 32; i++) jsx.push(<MenuItem value={i}>{i}</MenuItem>);\n            return jsx;\n        }\n\n        let optionJsx =<div></div>;\n        switch (yearlyOption) {\n            case \"BYMONTHDAY\":\n                optionJsx = [\n                    <Select value={byMonth} defaultValue={DateTime.local().month} onChange={e => setByMonth(parseInt(e.target.value))}>\n                        <MenuItem value={1}>January</MenuItem>\n                        <MenuItem value={2}>February</MenuItem>\n                        <MenuItem value={3}>March</MenuItem>\n                        <MenuItem value={4}>April</MenuItem>\n                        <MenuItem value={5}>May</MenuItem>\n                        <MenuItem value={6}>June</MenuItem>\n                        <MenuItem value={7}>July</MenuItem>\n                        <MenuItem value={8}>August</MenuItem>\n                        <MenuItem value={9}>September</MenuItem>\n                        <MenuItem value={10}>October</MenuItem>\n                        <MenuItem value={11}>November</MenuItem>\n                        <MenuItem value={12}>December</MenuItem>\n                    </Select>,\n                    <Select value={byMonthDay} defaultValue={1} onChange={e => setByMonthDay(parseInt(e.target.value))}>\n                        {populateDayItems()}\n                    </Select>\n                ];\n                break;\n            case \"BYSETPOS\":\n                let byDayString = copyObject(byDay);\n                if (Array.isArray(byDay)) byDayString = byDayString.join(',');\n                optionJsx = [\n                    <Select value={bySetPos} defaultValue={1} onChange={e => setBySetPos(parseInt(e.target.value))}>\n                        <MenuItem value={1}>First</MenuItem>\n                        <MenuItem value={2}>Second</MenuItem>\n                        <MenuItem value={3}>Third</MenuItem>\n                        <MenuItem value={4}>Fourth</MenuItem>\n                        <MenuItem value={-1}>Last</MenuItem>\n                    </Select>,\n                    <Select value={byDayString} defaultValue={\"MO\"} onChange={e => setByDay(e.target.value.split(','))}>\n                        <MenuItem value={\"MO\"}>Monday</MenuItem>\n                        <MenuItem value={\"TU\"}>Tuesday</MenuItem>\n                        <MenuItem value={\"WE\"}>Wednesday</MenuItem>\n                        <MenuItem value={\"TH\"}>Thursday</MenuItem>\n                        <MenuItem value={\"FR\"}>Friday</MenuItem>\n                        <MenuItem value={\"SA\"}>Saturday</MenuItem>\n                        <MenuItem value={\"SU\"}>Sunday</MenuItem>\n                        <MenuItem value={\"MO,TU,WE,TH,FR,SA,SU\"}>Day</MenuItem>\n                        <MenuItem value={\"MO,TU,WE,TH,FR\"}>Weekday</MenuItem>\n                        <MenuItem value={\"SA,SU\"}>Weekend Day</MenuItem>\n                    </Select>,\n                    <Select value={byMonth} defaultValue={DateTime.local().month} onChange={e => setByMonth(parseInt(e.target.value))}>\n                        <MenuItem value={1}>January</MenuItem>\n                        <MenuItem value={2}>February</MenuItem>\n                        <MenuItem value={3}>March</MenuItem>\n                        <MenuItem value={4}>April</MenuItem>\n                        <MenuItem value={5}>May</MenuItem>\n                        <MenuItem value={6}>June</MenuItem>\n                        <MenuItem value={7}>July</MenuItem>\n                        <MenuItem value={8}>August</MenuItem>\n                        <MenuItem value={9}>September</MenuItem>\n                        <MenuItem value={10}>October</MenuItem>\n                        <MenuItem value={11}>November</MenuItem>\n                        <MenuItem value={12}>December</MenuItem>\n                    </Select>\n                ];\n                break;\n            default:\n                console.error(\"RRuleInterface: yearlyOption default case\");\n                break;\n        }\n        return (\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <FormControl component=\"fieldset\">\n                        <RadioGroup row name=\"position\" value={yearlyOption === \"BYMONTHDAY\" ? \"left\" : \"right\"} defaultValue=\"left\">\n                            <FormControlLabel\n                            value=\"left\"\n                            control={<Radio onChange={e => {if (e.target.checked) setYearlyOption(\"BYMONTHDAY\")}} color=\"primary\" />}\n                            label=\"On\"\n                            labelPlacement=\"top\"\n                            />\n                            <FormControlLabel\n                            value=\"right\"\n                            control={<Radio onChange={e => {if (e.target.checked) setYearlyOption(\"BYSETPOS\")}} color=\"primary\" />}\n                            label=\"On The\"\n                            labelPlacement=\"top\"\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12}>\n                    {optionJsx}\n                </Grid>\n            </Grid>\n        );\n    }\n\n    const frequencyJsx = {\n        \"HOURLY\": () => {},\n        \"DAILY\": () => {},\n        \"WEEKLY\": weekly,\n        \"MONTHLY\": monthly,\n        \"YEARLY\": yearly\n    };\n\n    return (\n        <Grid style={{flexGrow: 1, padding: \"1rem\"}} container justify=\"center\" alignItems=\"center\" spacing={2}>\n            <Grid item xs={12}>\n                {frequencySelect()}\n            </Grid>\n            <Grid item xs={12}>\n                {frequencyJsx[frequency]()}\n            </Grid>\n            <Grid item xs={12}>\n                {endSelect()}\n            </Grid>\n        </Grid>\n    );\n};","import React, { useEffect, useState } from \"react\";\nimport {copyObject, localDate} from \"../utilities\";\nimport CategoryPicker from \"./CategoryPicker\";\nimport RRuleInterface from \"./RRuleInterface\";\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport {overflow} from \"@material-ui/system\";\nimport {spacing} from \"@material-ui/system\"\n\nconst useStyles = makeStyles(() => ({\n    dialog: {\n        padding: \"2rem\" \n    },\n    deleteButton: {\n        float: \"right\"\n    }\n}));\n\nfunction EventPopover({info={}, eventsArray=[], updateNewEvent=() => {}, deleteNewEvent=() => {}, open=false, setOpen=() => {}}) {\n    const [newName, setNewName] = useState(info.event.extendedProps.name);\n    const [rrule, setRRule] = useState(info.event.extendedProps.rrule);\n    const [doesRepeat, setDoesRepeat] = useState(info.event.extendedProps.rrule !== null ? true : false);\n    const [category, setCategory] = useState(info.event.extendedProps.category);\n    const classes = useStyles();\n\n    \n    \n    let id = \"\";\n    if (info.event.extendedProps.rrule) {\n        id = info.event.groupId;\n    }\n    else {\n        id = info.event.id;\n    }\n\n    useEffect(function() {\n        setRRule(info.event.extendedProps.rrule);\n        setDoesRepeat(info.event.extendedProps.rrule !== null ? true : false);\n    }, [info]);\n\n    function deleteEvent() {\n        setOpen(false);\n        let idLetter = id[0];\n        let idNumb = parseInt(id.substring(1));\n        if (idLetter === 'n') {\n            deleteNewEvent(idNumb);\n        }\n        info.event.remove();\n    }\n\n    function onApply() {\n        setOpen(false);\n        let idLetter = id[0];\n        let idNumb = parseInt(id.substring(1));\n        let newEvent = copyObject(info.event.extendedProps);\n        if (idLetter === 'n') {\n            newEvent.name = newName;\n        }\n        else {\n            newEvent.eventName = newName;\n        }\n        newEvent.rrule = rrule;\n        newEvent.category = category;\n        updateNewEvent(idNumb, newEvent);\n    }\n\n    function repeatingJsx() {\n        let jsx = <div></div>;\n        if (doesRepeat) jsx = <RRuleInterface dtStart={localDate(info.event.extendedProps.start)} rrule={rrule} setRRule={setRRule}/>;\n        return (\n            <div>\n            <FormControl component=\"fieldset\">\n                <RadioGroup row name=\"position\" value={doesRepeat ? \"right\" : \"left\"} defaultValue=\"left\">\n                    <FormControlLabel\n                    value=\"left\"\n                    control={<Radio onChange={e => {if (e.target.checked) setDoesRepeat(false)}} color=\"primary\" />}\n                    label=\"Doesn't Repeat\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"right\"\n                    control={<Radio onChange={e => {if (e.target.checked) setDoesRepeat(true)}} color=\"primary\" />}\n                    label=\"Repeats\"\n                    labelPlacement=\"top\"\n                    />\n                </RadioGroup>\n            </FormControl>\n            {jsx}\n            </div>\n        );\n    }\n//DEBUG changed TextField prop defaultValue from ={newName} to =\"New Task\"\n    return (\n        <Dialog onClose={() => setOpen(false)} open={open}>\n            <DialogTitle>\n                <TextField onChange={e => setNewName(e.target.value)} defaultValue=\"New Task\" />\n                <Button className={classes.deleteButton} onClick={deleteEvent} variant=\"outlined\" color=\"primary\">Delete</Button>\n            </DialogTitle>\n                <form noValidate autoComplete=\"off\" className={classes.dialog}>\n                    <div>\n                        <CategoryPicker selectedCategories={{[category]: \"\"}} onSelect={setCategory} onDeselect={() => setCategory(null)}/>\n                    </div>\n                    <div>\n                        {repeatingJsx()}\n                    </div>\n                    <div>\n                        <Button onClick={onApply} variant=\"contained\" color=\"primary\">Apply</Button>\n                    </div>\n                </form>\n        </Dialog>\n    );\n}\n\nexport default EventPopover;\n","import React, { useState, useRef, useEffect } from 'react';\n\nimport { DateTime, Interval } from \"luxon\";\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport rrulePlugin from '@fullcalendar/rrule';\nimport luxonPlugin from '@fullcalendar/luxon';\n\nimport {rruleString, rruleObject, localDate, executeQuery} from \"../utilities\";\nimport {millisecondMap} from \"../constants\";\nimport config from '../config.json';\nimport EventPopover from './EventPopover';\n\nconst minSelectMinutes = 10;\nconst selectMinutesModulus = 5;\nlet newEvents = [];\nlet mirrorElements = [];\n\nfunction Calendar({tier=\"\"}) {\n    const calendarRef = useRef(null);\n    const [query, setQuery] = useState({\n        path: \"/events/getEvents\",\n        onResponse: res => {\n            newEvents = res.data;\n            refreshCalendar();\n        }\n    });\n    const [state, setState] = useState(1);\n    const [selectedDate, setSelectedDate] = useState(DateTime.local());\n    const {0: plans} = useState([]);\n    const [eventPopoverOpen, setEventPopoverOpen] = useState(false);\n    const [currentInfo, setCurrentInfo] = useState(null);\n\n    useEffect(executeQuery(query), []);\n\n    const states = {\n        0: {\n            view: \"dayGridMonth\",\n            isEditable: true, // NEW was false\n            headerToolbar: {start: \"\", center: \"title\", end: \"currentMonth prev,next\"},\n            selectable: true,\n            dateClick: dateClickStandard,\n            select: () => {},\n            slotDuration: \"01:00:00\",\n            snapDuration: \"00:30:00\",\n            contentHeight: null,\n            height: window.innerHeight,\n            firstDate: 0,\n        },\n        1: {\n            view: \"timeGridWeek\",\n            isEditable: true,\n            headerToolbar: {start: \"monthButton\", center: \"title\", end: \"currentWeek prev,next\"},\n            selectable: true,\n            dateClick: info => {},\n            select: async function(info) {\n                const start = DateTime.fromISO(info.startStr).toMillis();\n                let distance = Math.max(DateTime.fromISO(info.endStr).toMillis() - start, minSelectMinutes * millisecondMap.minute);\n                distance = distance - (distance % (selectMinutesModulus * millisecondMap.minute));\n                let newEvent = {\n                    start: start,\n                    end: start + distance,\n                    name: \"New Task\",\n                    category: null,\n                    // timezone: DateTime.local().zoneName,\n                    rrule: null\n                };\n                addNewEvent(newEvent);\n            },\n            slotDuration: \"00:15:00\",\n            snapDuration: `00:05:00`,\n            contentHeight: 'auto',\n            height: 'auto',\n            firstDate: 0,\n        },\n        2: {\n            view: \"timeGridDay\",\n            isEditable: true,\n            headerToolbar: {start: \"weekButton\", center: \"title\", end: \"currentDay prev,next\"},\n            selectable: true,\n            dateClick: info => {},\n            select: async function(info) {\n                let dt = DateTime.fromISO(info.dateStr);\n                let newEvent = {\n                    start: dt.toMillis(),\n                    end: dt.plus({hours: 1}).toMillis(),\n                    name: \"New Task\",\n                    category: null,\n                    // timezone: DateTime.local().zoneName,\n                    rrule: null\n                };\n                addNewEvent(newEvent);\n            },\n            slotDuration: \"00:15:00\",\n            snapDuration: `00:05:00`,\n            contentHeight: 'auto',\n            height: 'auto',\n            firstDate: 0,\n        }\n    };\n\n    function refreshCalendar() {\n        clearCalendarEvents();\n        for(let i = 0; i < newEvents.length; i++) {\n            addEventToCalendar(newEvents[i], `n${i}`);\n        }\n    }\n\n    function addNewEvent(newEvent) {\n        newEvents.push(newEvent);\n        refreshCalendar();\n        executeQuery({\n            path: \"events/addEvent\",\n            data: {event: newEvent}\n        })();\n    }\n\n    function updateNewEvent(index, updatedEvent) {\n        newEvents[index] = updatedEvent;\n        refreshCalendar();\n        executeQuery({\n            path: \"events/updateEvent\",\n            data: {index: index, event: updatedEvent}\n        })();\n    }\n\n    function deleteNewEvent(index) {\n        newEvents.splice(index, 1);\n        refreshCalendar();\n        executeQuery({\n            path: \"events/deleteEvent\",\n            data: {index: index}\n        })();\n    }\n\n    function addEventToCalendar(newEvent, id) {\n        console.log(newEvents);\n        let api = calendarRef.current.getApi();\n        const idLetter = id[0];\n        switch (idLetter) {\n            case 'n':\n                if (newEvent.rrule) {\n                    api.addEvent({\n                        backgroundColor: `${config.colors.primary.main}bf`,\n                        borderColor: `${config.colors.primary.main}bf`,\n                        textColor: `${config.colors.primary.contrastText}bf`,\n                        groupId: id,\n                        title: newEvent.name + (newEvent.category ? \": \" + newEvent.category : \"\"),\n                        dtstart: localDate(newEvent.start).toISO(),\n                        duration: {milliseconds: Interval.fromDateTimes(localDate(newEvent.start), localDate(newEvent.end)).length(\"milliseconds\")},\n                        rrule: newEvent.rrule,\n                        extendedProps: newEvent\n                    });\n                }\n                else {\n                    api.addEvent({\n                        backgroundColor: `${config.colors.primary.main}bf`,\n                        borderColor: `${config.colors.primary.main}bf`,\n                        textColor: `${config.colors.primary.contrastText}bf`,\n                        id: id,\n                        title: newEvent.name + (newEvent.category ? \": \" + newEvent.category : \"\"),\n                        start: localDate(newEvent.start).toISO(),\n                        end: localDate(newEvent.end).toISO(),\n                        extendedProps: newEvent\n                    });\n                }\n                break;\n            case 'p':\n                api.addEvent({\n                    backgroundColor: config.colors.primary.main,\n                    borderColor: config.colors.primary.main,\n                    textColor: config.colors.primary.contrastText,\n                    id: id,\n                    title: \"[\" + newEvent.personName + \"] \" + newEvent.eventName + (newEvent.category ? \": \" + newEvent.category : \"\"),\n                    start: localDate(newEvent.start).toISO(),\n                    end: localDate(newEvent.end).toISO(),\n                    extendedProps: newEvent\n                });\n                break;\n        }\n    }\n\n    function clearCalendarEvents() {\n        let events = calendarRef.current.getApi().getEvents();\n        for (let i = 0; i < events.length; i++) {\n            events[i].remove();\n        }\n    }\n\n    function changeState(newState, nextDate) {\n        if (newState in states) {\n            setState(newState);\n            let calendarApi = calendarRef.current.getApi();\n            calendarApi.changeView(states[newState].view, nextDate.toMillis());\n        }\n    }\n\n    function dateClickStandard(info) {\n        let dt = DateTime.fromISO(info.dateStr);\n        if (info.date) {\n            setSelectedDate(dt);\n            changeState(state + 1, dt);\n        }\n    }\n\n    function onCalendarEventChange(info) {\n        const event = info.event;\n        let idLetter = '';\n        let id = -1;\n        const difference = DateTime.fromISO(event.startStr).toMillis() - localDate(event.extendedProps.start).toMillis();\n        let rrule = event.extendedProps.rrule;\n        if (event.groupId) {\n            let rruleObj = rruleObject(rrule);\n            idLetter = event.groupId[0];\n            id = parseInt(event.groupId.substring(1));\n            rruleObj.start = rruleObj.start.plus(difference);\n            if (rruleObj.until) rruleObj.until = rruleObj.until.plus(difference);\n            rrule = rruleString(rruleObj);\n        }\n        else {\n            idLetter = event.id[0];\n            id = parseInt(event.id.substring(1));\n        }\n\n        switch (idLetter) {\n            case 'n':\n                let newEvent = {\n                    start: DateTime.fromISO(event.startStr).toMillis(),\n                    end: DateTime.fromISO(event.endStr).toMillis(),\n                    name: event.title,\n                    category: event.extendedProps.category,\n                    // timezone: event.extendedProps.zoneName,\n                    rrule: rrule\n                };\n                if (newEvent.rrule) {\n                    updateNewEvent(id, newEvent);\n                }\n                else {\n                    newEvents[id] = newEvent;\n                    executeQuery({\n                        path: \"events/updateEvent\",\n                        data: {index: id, event: newEvent}\n                    })();\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    function handleMirror(info) {\n        info.el.style.backgroundColor = config.colors.primary.main;\n        info.el.style.borderColor = config.colors.primary.main;\n        info.el.style.textColor = config.colors.primary.contrastText;\n        mirrorElements.push(info.el);\n\n        info.el.addEventListener(\"mouseup\", () => {\n            for (let i = 0; i < mirrorElements.length; i++) {\n                mirrorElements[i].remove();\n            }\n        });\n    }\n\n    function dialogJsx() {\n        if (currentInfo) {\n            return <EventPopover\n            open={eventPopoverOpen}\n            setOpen={setEventPopoverOpen}\n            info={currentInfo} \n            eventsArray={newEvents}\n            addNewEvent={addNewEvent}\n            deleteNewEvent={deleteNewEvent}\n            updateNewEvent={updateNewEvent}\n            calendarRef={calendarRef}\n            />;\n        }\n        else {\n            return <div></div>\n        }\n    }\n\n    return (\n        <div>\n            <FullCalendar\n            ref={calendarRef}\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, rrulePlugin, luxonPlugin]}\n            timeZone={DateTime.local().zoneName}\n            initialView={states[state].view}\n            // events={getCalendarEvents()}\n            initialDate={selectedDate.toISO()}\n            firstDay={states[state].firstDay}\n            eventResizableFromStart={true}\n            // selectMirror={true}\n            longPressDelay={333}\n            // expandRows={true}\n            editable={states[state].isEditable}\n            headerToolbar={states[state].headerToolbar}\n            selectable={states[state].selectable}\n            dateClick={states[state].dateClick}\n            select={states[state].select}\n            slotDuration={states[state].slotDuration}\n            snapDuration={states[state].snapDuration}\n            contentHeight={states[state].contentHeight}\n            height={states[state].height}\n\n            eventDidMount={info => {\n                if (info.isMirror) {\n                    handleMirror(info);\n            }}}\n            eventDrop={onCalendarEventChange}\n            eventResize={onCalendarEventChange}\n\n            eventClick={info => {setCurrentInfo(info); setEventPopoverOpen(true)}}\n\n            customButtons={{\n                monthButton: {\n                    text: \"Month\",\n                    click: () => {changeState(0, selectedDate)}\n                },\n                weekButton: {\n                    text: \"Week\",\n                    click: () => {changeState(1, selectedDate)}\n                },\n                currentMonth: {\n                    text: \"Current Month\",\n                    click: () => {setSelectedDate(DateTime.local()); changeState(0, DateTime.local());}\n                },\n                currentWeek: {\n                    text: \"Current Week\",\n                    click: () => {setSelectedDate(DateTime.local()); changeState(1, DateTime.local());}\n                },\n                currentDay: {\n                    text: \"Today\",\n                    click: () => {setSelectedDate(DateTime.local()); changeState(2, DateTime.local());}\n                },\n                applyButton: {\n                    text: \"Apply Changes\",\n                    click: _ => {}\n                }\n            }}\n            />\n            {dialogJsx()}\n        </div>\n    );\n}\n\nexport default Calendar;\n","import React from \"react\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    avatar: {\n        color: theme.palette.getContrastText(theme.palette.primary.light),\n        backgroundColor: theme.palette.primary.light,\n    },\n}));\n\n/* inputObjects: each objects has\n  jsx: The jsx for that item.\n  src: The src link for the avatar photo.\n  onClick:\n  onDelete:\n*/\nexport default function AvatarList({inputObjects=[], onAdd=null, addString=\"\"}) {\n    const classes = useStyles();\n\n    function listItemsJsx() {\n        let jsxList = [];\n        for (let i = 0; i < inputObjects.length; i++) {\n            jsxList.push(\n                <ListItem key={i} button onClick={inputObjects[i].onClick}>\n                    <ListItemAvatar>\n                        <Avatar\n                            className={classes.avatar}\n                            alt={`Avatar °${i}`}\n                            src={inputObjects[i].src}\n                        >\n                            {inputObjects[i].avatarChildren ? inputObjects[i].avatarChildren : null}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={inputObjects[i].jsx} />\n                    <ListItemSecondaryAction>\n                        {inputObjects[i].onDelete ? \n                        <IconButton\n                        onClick={inputObjects[i].onDelete}\n                        color=\"light\"\n                        >\n                            <CancelIcon />\n                        </IconButton> : <div></div>}\n                    </ListItemSecondaryAction>\n                </ListItem>\n            );\n        }\n        if (onAdd !== null) {\n            jsxList.push(\n                <ListItem key={inputObjects.length} button onClick={onAdd}>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <AddIcon />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={addString} />\n                </ListItem>\n            );\n        }\n        return jsxList;\n    }\n\n    return (\n        <List dense className={classes.root}>\n            {listItemsJsx()}\n        </List>\n    );\n};","import React from \"react\";\nimport AvatarList from \"./AvatartList\";\nimport FlexibleBox from \"./FlexibleBox\";\nimport CategoryBadge from \"./CategoryBadge\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\n// onDelete takes a name, person object parameter\n// onClick takes name, person object parameters\n// filter takes name, person object parameters and returns true if that person is included in the list, false if not.\nexport default function PeopleList(props) {\n    const {\n        people={},\n        onClick=(name, person) => {}, \n        onDelete=(name, person) => {}, \n        onAdd=() => {}\n    } = props;\n\n    function generateInputObjects() {\n        let objects = [];\n        for (const name in people) {\n            let catJsx = [];\n            for (const category in people[name].categories) {\n                catJsx.push(<CategoryBadge category={category} highlight={false} />);\n            }\n            objects.push({\n                src: \"\",\n                jsx: <Grid container alignItems=\"center\" justify=\"center\" spacing={2}>\n                        <Grid item xs={3}>\n                            <h2>{name}</h2>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <FlexibleBox>{catJsx}</FlexibleBox>\n                        </Grid>\n                    </Grid>, \n                avatarChildren: name[0],\n                onClick: () => onClick(name, people[name]),\n                onDelete: onDelete ? () => onDelete(name, people[name]) : null\n            });\n        }\n        return objects;\n    }\n\n    return (\n        <AvatarList inputObjects={generateInputObjects()} onAdd={onAdd} addString={<h2>Add Person</h2>} />\n    );\n}","import React, {useState} from \"react\";\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function AddPersonDialog(props) {\n    const {open=false, setOpen=() => {}, onAdd=name => {}} = props;\n    const [newName, setNewName] = useState(\"\");\n\n    function addPerson() {\n        onAdd(newName);\n        handleClose();\n    }\n\n    function handleClose() {\n        setOpen(false);\n    }\n\n    return (\n        <Dialog onClose={handleClose} open={open}>\n            <DialogTitle>New Person</DialogTitle>\n            <DialogContent>\n                <TextField \n                autoFocus\n                margin=\"dense\"\n                label=\"Name\"\n                type=\"text\"\n                fullWidth\n                onChange={event => setNewName(event.target.value)}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={addPerson} color=\"primary\">\n                    Add\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};","import { Grid } from \"@material-ui/core\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { DateTime } from \"luxon\";\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport rrulePlugin from '@fullcalendar/rrule';\nimport luxonPlugin from '@fullcalendar/luxon';\n\nimport config from '../config.json';\nimport {rruleObject, rruleString, copyObject} from \"../utilities\";\nimport {millisecondMap} from \"../constants\";\nimport RRuleInterface from \"./RRuleInterface\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nconst minSelectMinutes = 10;\nconst selectMinutesModulus = 5;\n\nfunction createEvent(availability, id) {\n    let event = {\n        title: \"Available\",\n        backgroundColor: config.colors.primary.main,\n        borderColor: config.colors.primary.main,\n        textColor: config.colors.primary.contrastText\n    }\n    if (availability.rrule) {\n        event.groupId = id;\n        event.rrule = availability.rrule;\n        event.dtStart = DateTime.fromMillis(availability.start).toISO();\n        event.duration = {milliseconds: availability.end - availability.start}\n    }\n    else {\n        event.id = id;\n        event.start = DateTime.fromMillis(availability.start).toISO();\n        event.end = DateTime.fromMillis(availability.end).toISO();\n    }\n    return event;\n}\n\nfunction createEvents(availabilities) {\n    let events = [];\n    for (let i = 0; i < availabilities.length; i++) {\n        events.push(createEvent(availabilities[i], i.toString()));\n    }\n    return events;\n}\n\nexport default function AvailibilityInterface(props) {\n    const {\n        availabilities=[], \n        onAdd=(start, end, timezone, rrule) => {}, \n        onChange=(index, start, end, timezone, rrule) => {}, \n        onRemove=index => {}\n    } = props;\n\n    const [events, setEvents] = useState([]);\n    const [index, setIndex] = useState(-1);\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const calendarRef = useRef(null);\n    const [headerToolbar, setHeaderToolbar] = useState({start: \"monthButton\", center: \"title\", end: \"today prev,next\"});\n    const [checked, setChecked] = useState(false);\n    const [newRule, setNewRule] = useState(null);\n\n    useEffect(function() {\n        setEvents(createEvents(availabilities))\n        if (index >= 0 && index < availabilities.length) {\n            if (availabilities[index].rrule !== null) {\n                setChecked(true);\n                setNewRule(availabilities[index].rrule);\n            }\n            else {\n                setChecked(false);\n                setNewRule(null);\n            }\n        }\n    }, [index, availabilities, setNewRule]);\n\n    function localAdd(info) {\n        let eventsCopy = copyObject(events);\n        const start = DateTime.fromISO(info.startStr).toMillis();\n        let distance = Math.max(DateTime.fromISO(info.endStr).toMillis() - start, minSelectMinutes * millisecondMap.minute);\n        distance = distance - (distance % (selectMinutesModulus * millisecondMap.minute));\n        eventsCopy.push(createEvent({\n            start: start,\n            end: start + distance,\n            timezone: DateTime.local().zoneName,\n            rrule: null}, events.length.toString()));\n        setEvents(eventsCopy);\n        onAdd(\n            start, \n            start + distance, \n            DateTime.local().zoneName, \n            null\n        );\n    }\n\n    function localChange(info) {\n        const eventIndex = parseInt(info.event.id || info.event.groupId);\n        const start = DateTime.fromISO(info.event.startStr).toMillis();\n        const end = DateTime.fromISO(info.event.endStr).toMillis();\n        const diff = start - availabilities[eventIndex].start;\n        let rrule = availabilities[eventIndex].rrule;\n        if (rrule) {\n            let rruleObj = rruleObject(rrule);\n            rruleObj.start = DateTime.fromMillis(start);\n            if (rruleObj.until) {\n                rruleObj.until = rruleObj.until.plus({milliseconds: diff});\n            }\n            rrule = rruleString(rruleObj);\n        }\n        let newEvents = copyObject(events);\n        newEvents[eventIndex] = info.event;\n        setEvents(newEvents);\n        onChange(eventIndex, start, end, availabilities[eventIndex].timezone, rrule);\n    }\n\n    function localRemove(removeIndex) {\n        let eventsCopy = copyObject(events);\n        eventsCopy.splice(removeIndex, 1);\n        setEvents(eventsCopy);\n        onRemove(index);\n    }\n\n    function dialogJsx() {\n        if (index >= 0 && index < availabilities.length) {\n            let rruleJsx = <div></div>;\n            if (checked) {\n                rruleJsx = (\n                    <RRuleInterface \n                    dtStart={DateTime.fromMillis(availabilities[index].start)} \n                    rrule={newRule} \n                    setRRule={setNewRule}/>\n                );\n            }\n            return <FormControl>\n                <Button style={{float: \"right\"}} variant=\"outlined\" color=\"primary\" onClick={() => {setDialogOpen(false); localRemove(index);}}>Delete</Button>\n                <RadioGroup value={checked ? \"right\" : \"left\"}>\n                    <FormControlLabel\n                    value=\"left\"\n                    control={<Radio onChange={e => {if (e.target.checked) {setNewRule(null); setChecked(false)}}} color=\"primary\" />}\n                    label=\"Doesn't Repeat\"\n                    labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                    value=\"right\"\n                    control={<Radio onChange={e => {if (e.target.checked) setChecked(true)}} color=\"primary\" />}\n                    label=\"Repeats\"\n                    labelPlacement=\"top\"\n                    />\n                </RadioGroup>\n                {rruleJsx}\n                <Button variant=\"contained\" color=\"primary\" onClick={() => {setDialogOpen(false); onChange(\n                index, \n                availabilities[index].start, \n                availabilities[index].end,\n                availabilities[index].timezone,\n                newRule\n                )}}>Apply</Button>\n            </FormControl>;\n        }\n        else return <div></div>;\n    }\n\n    return (\n        <Grid content>\n            <Grid item xs={12}>\n                <FullCalendar\n                ref={calendarRef}\n                plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, rrulePlugin, luxonPlugin]}\n                headerToolbar={headerToolbar}\n                eventResizableFromStart={true}\n                // selectMirror={true}\n                longPressDelay={333}\n                firstDay={0}\n                timeZone={DateTime.local().zoneName}\n                initialView={\"timeGridWeek\"}\n                events={events}\n                initialDate={DateTime.local().toISO()}\n                editable={true}\n                selectable={true}\n                contentHeight=\"auto\"\n                height=\"auto\"\n                views={{\n                    timeGridWeek: {\n                        // dateClick: localAdd,\n                        select: localAdd,\n                        slotDuration: \"00:15:00\",\n                        snapDuration: `00:05:00`,\n                    },\n                    dayGridMonth: {\n                        dateClick: info => {\n                            let api = calendarRef.current.getApi();\n                            api.changeView(\"timeGridWeek\", DateTime.fromISO(info.dateStr).toMillis());\n                            setHeaderToolbar({start: \"monthButton\", center: \"title\", end: \"today prev,next\"});\n                        },\n                        slotDuration: \"01:00:00\",\n                        snapDuration: `00:05:00`,\n                    }\n                }}\n                customButtons={{\n                    monthButton: {\n                        text: \"Month\",\n                        click: () => {\n                            calendarRef.current.getApi().changeView(\"dayGridMonth\", calendarRef.current.getApi().getDate());\n                            setHeaderToolbar({start: \"\", center: \"title\", right: \"today prev,next\"})\n                        }\n                    }\n                }}\n\n                eventDrop={localChange}\n                eventResize={localChange}\n\n                eventClick={info => {setIndex(parseInt(info.event.id || info.event.groupId)); setDialogOpen(true);}}\n                />\n                <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)}>\n                    {dialogJsx()}\n                </Dialog>\n            </Grid>\n        </Grid>\n    );\n}","import React from \"react\";\nimport CategoryPicker from \"./CategoryPicker\";\nimport AvailabilitiesInterface from \"./AvailibilityInterface\";\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Avatar from '@material-ui/core/Avatar';\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    avatar: {\n        width: theme.spacing(12),\n        height: theme.spacing(12),\n        fontSize: \"4rem\",\n        backgroundColor: theme.palette.primary.light,\n    }\n}));\n\nexport default function PersonPage(props) {\n    const {\n        name=\"\", \n        categories={}, \n        availabilities=[],\n        onClose=() => {},\n        onChangeName=newName => {},\n        onCategorySelect=category => {},\n        onCategoryDeselect=category => {},\n        onAddAvailability=(name, start, end, timezone, rrule) => {},\n        onChangeAvailability=(name, index, start, end, timezone, rrule) => {},\n        onRemoveAvailibility=(name, index) => {},\n    } = props;\n    const classes = useStyles();\n\n    function handleChangeName(event) {\n        event.preventDefault()\n        const newName = event.target.value.trim();\n        onChangeName(newName);\n        event.target.blur();\n    }\n\n    return (\n        <Grid className={classes.root} align=\"center\" alignItems=\"center\" justify=\"center\" container spacing={2}>\n            <Grid container>\n                <Grid alignItems=\"flex-start\" item xs={3} spacing={2}>\n                    <Button style={{margin: \"1.5rem\"}} size=\"large\" onClick={onClose} color=\"primary\" variant=\"contained\" >Back</Button>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Avatar className={classes.avatar} >{name[0]}</Avatar>\n            </Grid>\n            <Grid item xs={12}>\n                <TextField \n                onKeyDown={(e) => {if (e.keyCode === 13) {handleChangeName(e)}}} \n                onBlur={handleChangeName} defaultValue={name} \n                label=\"Name\"\n                size=\"large\"\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <CategoryPicker selectedCategories={categories} onSelect={onCategorySelect} onDeselect={onCategoryDeselect} />\n            </Grid>\n            <Grid item xs={12}>\n                <Typography variant=\"h4\">What times is {name} available?</Typography>\n            </Grid>\n            <Grid item xs={12}>\n                <AvailabilitiesInterface \n                availabilities={availabilities} \n                onAdd={(start, end, timezone, rrule) => onAddAvailability(name, start, end, timezone, rrule)} \n                onChange={(index, start, end, timezone, rrule) => onChangeAvailability(name, index, start, end, timezone, rrule)} \n                onRemove={index => onRemoveAvailibility(name, index)}\n                />\n            </Grid>\n        </Grid>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport { executeQuery, copyObject } from '../utilities';\nimport PeopleList from \"./PeopleList\";\nimport AddPersonDialog from './AddPersonDialog';\nimport PersonPage from \"./PersonPage\";\n\nfunction People() {\n    const [query, setQuery] = useState(null);\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const [people, setPeople] = useState({});\n    const [currentName, setCurrentName] = useState(null);\n    const [personOpen, setPersonOpen] = useState(false);\n\n    // eslint-disable-next-line\n    useEffect(executeQuery(query, {\n        path: \"/people/getPeople\",\n        data: {},\n        onResponse: res => setPeople(res.data)\n    }), [query]);\n\n    function onCategorySelect(category) {\n        let newPeople = copyObject(people);\n        newPeople[currentName].categories[category] = \"\";\n        setPeople(newPeople);\n        setQuery({path: \"/people/setCategories\", data: {name: currentName, categories: newPeople[currentName].categories}});\n    }\n\n    function onCategoryDeselect(category) {\n        let newPeople = copyObject(people);\n        delete newPeople[currentName].categories[category];\n        setPeople(newPeople);\n        setQuery({path: \"/people/setCategories\", data: {name: currentName, categories: newPeople[currentName].categories}});\n    }\n\n    if (personOpen) {\n        return <PersonPage \n        name={currentName}\n        categories={people[currentName] ? people[currentName].categories : {}}\n        availabilities={people[currentName] ? people[currentName].availabilities : []}\n        onAddAvailability={(name, start, end, timezone, rrule) => setQuery({\n            path: \"/people/addAvailability\",\n            data: {name: name, utcStart: start, utcEnd: end, timezone: timezone, rrule: rrule}\n        })}\n        onChangeAvailability={(name, index, start, end, timezone, rrule) => setQuery({\n            path: \"/people/changeAvailability\",\n            data: {name: name, index: index, utcStart: start, utcEnd: end, timezone: timezone, rrule: rrule}\n        })}\n        onRemoveAvailibility={(name, index) => setQuery({path: \"/people/removeAvailability\", data: {name: name, index: index}})}\n        onClose={() => setPersonOpen(false)}\n        onChangeName={newName => {\n            setQuery({path: \"/people/changeName\", data: {oldName: currentName, newName: newName}, onResponse: res =>\n                {if (res.data === 0) setCurrentName(newName);}\n            }); \n        }}\n        onCategorySelect={onCategorySelect}\n        onCategoryDeselect={onCategoryDeselect}\n        />;\n    }\n    else {\n        return (\n            <div>\n                <PeopleList \n                people={people}\n                onDelete={name => setQuery({path: \"/people/removePerson\", data: {name: name}})} \n                onAdd={() => setDialogOpen(true)}\n                onClick={name => {setCurrentName(name); setPersonOpen(true);}}\n                />\n                <AddPersonDialog \n                open={dialogOpen} \n                setOpen={setDialogOpen} \n                onAdd={name => setQuery({path: \"/people/addPerson\", data: {name: name}})} \n                />\n            </div>\n        );\n    }\n}\n\nexport default People;","import React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { executeQuery, pathLowestLevel } from '../utilities';\nimport config from '../config.json';\n\n// material ui\nimport {makeStyles, createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport EventIcon from '@material-ui/icons/Event';\nimport PeopleIcon from '@material-ui/icons/People';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    tabs: {\n        flexGrow: 1,\n        justifyContent: 'center'\n    },\n    title: {\n      flexGrow: 1,\n    },\n    scheduleName: {\n        color: 'white',\n    },\n    logo: {\n        height: 46\n    },\n    emptyBar: {\n        marginBottom: \"1rem\",\n    }\n}));\n\nconst scheduleNameTheme = createMuiTheme({\n    palette: {\n      type: 'dark',\n    },\n  });\n\nexport default function AppNav(props) {\n    const { tier, setLoggedIn } = props;\n    const [query, setQuery] = useState(null);\n    const [schedule, setSchedule] = useState({});\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    let history = useHistory();\n    let location = useLocation();\n\n    // eslint-disable-next-line\n    useEffect(executeQuery(query, {path: \"/schedule/getSchedule\", data: {}, onResponse: (res) => {\n        setSchedule(res.data);\n    }}), [query]);\n\n    const classes = useStyles();\n    \n    function handleTabChange(event, newValue) {\n        history.push(newValue);\n    }\n\n    function validTabPath(pathname) {\n        const pathroot = pathLowestLevel(pathname);\n        return pathroot === \"/Calendar\" || pathroot === \"/People\";\n    }\n\n    return (\n        <div>\n            <AppBar position=\"fixed\" className={classes.root}>\n                <Toolbar>\n                    {/* <img src=\"/logo-secondary.png\" alt=\"logo\" className={classes.logo} /> */}\n                    <ThemeProvider theme={scheduleNameTheme}>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            <TextField \n                            multiline\n                            InputProps={{className: classes.scheduleName}}\n                            onBlur={event => setQuery({path: \"/schedule/renameSchedule\", data: {oldScheduleName: schedule.scheduleName, newScheduleName: event.target.value}})} \n                            defaultValue={schedule.scheduleName}\n                            helperText=\"Schedule Name\"\n                            />\n                        </Typography>\n                    </ThemeProvider>\n                    <Tabs value={validTabPath(location.pathname) ? pathLowestLevel(location.pathname) : \"/Calendar\"} onChange={handleTabChange} centered fullwidth=\"true\" className={classes.tabs}>\n                        <Tab value=\"/Calendar\" label=\"Calendar\" icon={<EventIcon />} />\n                        <Tab value=\"/People\" label=\"People\" icon={<PeopleIcon />} />\n                    </Tabs>\n                    <IconButton\n                    onClick={event => setAnchorEl(event.currentTarget)}\n                    color=\"inherit\"\n                    >\n                        <AccountCircle />\n                    </IconButton>\n                    <Menu\n                    anchorEl={anchorEl}\n                    anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}\n                    transformOrigin={{vertical: 'top', horizontal: 'center'}}\n                    open={anchorEl !== null}\n                    onClose={() => setAnchorEl(null)}\n                    >\n                        <MenuItem onClick={() => history.push(\"/Subscription\")}>Premium</MenuItem>\n                        {tier !== config.freeTierName ? <MenuItem onClick={() => setQuery({path: \"/stripeRoutes/customer-portal\", onResponse: res => window.location.href = res.data.url})}>Billing</MenuItem> : []}\n                        <MenuItem onClick={() => {setQuery({path: \"/online/logout\", data: {}, onResponse: function() {setLoggedIn(false); history.push(\"/Login\");}})}}>Logout</MenuItem>\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n            <Toolbar className={classes.emptyBar} />\n        </div>\n    );\n}","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport StarIcon from \"@material-ui/icons/StarBorder\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    cardHeader: {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n    },\n        cardPricing: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        marginBottom: theme.spacing(2),\n    },\n}));\n\nfunction ClickableCard(props) {\n    const {title=\"\", subheader=\"\", price=null, description=[], buttonText=\"\", buttonVariant=\"contained\", star=false, onButtonClick=() => {}} = props;\n    const classes = useStyles();\n\n    return (\n        <Card>\n            <CardHeader\n                title={title}\n                subheader={subheader}\n                titleTypographyProps={{ align: 'center' }}\n                subheaderTypographyProps={{ align: 'center' }}\n                action={star ? <StarIcon /> : null}\n                className={classes.cardHeader}\n            />\n            <CardContent>\n                {price ? (<div className={classes.cardPricing}>\n                    <Typography component=\"h2\" variant=\"h3\" color=\"textPrimary\">\n                        ${price}\n                    </Typography>\n                    <Typography variant=\"h6\" color=\"textSecondary\">\n                        /mo\n                    </Typography>\n                </div>) : null}\n                <ul>\n                {description.map((line) => (\n                    <Typography component=\"li\" variant=\"subtitle1\" align=\"center\" key={line}>\n                    {line}\n                    </Typography>\n                ))}\n                </ul>\n            </CardContent>\n            <CardActions>\n                <Button onClick={onButtonClick} fullWidth variant={buttonVariant} color=\"primary\">\n                {buttonText}\n                </Button>\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default ClickableCard;","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport { loadStripe } from '@stripe/stripe-js';\nimport {executeQuery} from \"../utilities\";\nimport config from '../config.json';\n\nimport ClickableCard from \"./ClickableCard\";\n\nconst useStyles = makeStyles(theme => ({\n    heroContent: {\n        padding: theme.spacing(8, 0, 6),\n    },\n    cards: {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    }\n}));\n\nfunction Subscription({currentTier=config.freeTierName}) {\n    const classes = useStyles();\n\n    function handleClick(upgradeTier) {\n        return async function() {\n            const stripePromise = loadStripe(config.stripe.publicKey);\n            // Get Stripe.js instance\n            const stripe = await stripePromise;\n            // Call your backend to create the Checkout Session\n            executeQuery({\n                path: \"/stripeRoutes/create-checkout-session\",\n                data: {upgradeTier: upgradeTier},\n                onResponse: async function(response) {\n                    const session = response.data;\n\n                    // When the customer clicks on the button, redirect them to Checkout.\n                    const result = await stripe.redirectToCheckout({\n                        sessionId: session.sessionId,\n                    });\n\n                    if (result.error) {\n                        // If `redirectToCheckout` fails due to a browser or network\n                        // error, display the localized error message to your customer\n                        // using `result.error.message`.\n                        window.alert(result.error.message);\n                    }\n                }\n            })();\n        };\n    };\n\n    function tierCardsJsx() {\n        let jsx = [];\n        for (const tierName in config.tiers) {\n            if (tierName !== config.freeTierName && tierName !== currentTier) {\n                jsx.push(\n                    <Grid item key={tierName} xs={12} sm={6} md={4}>\n                        <ClickableCard  \n                        title={tierName.charAt(0).toUpperCase() + tierName.slice(1)}\n                        subheader={null}\n                        price={config.tiers[tierName].price}\n                        description={[]}\n                        buttonText=\"Get Started\"\n                        buttonVariant=\"contained\"\n                        star={true}\n                        onButtonClick={handleClick(tierName)}\n                        />\n                    </Grid>\n                );\n            }\n        }\n        if (currentTier !== config.freeTierName) {\n            jsx.push(\n                <Grid item key={config.freeTierName} xs={12}  sm={6} md={4}>\n                    <ClickableCard \n                    onButtonClick={executeQuery({path: \"/stripeRoutes/customer-portal\", onResponse: res => window.location.href = res.data.url})}\n                    title={\"Manage Subscription\"}\n                    price={null}\n                    description={[\"Manage current subscriptions to Plandid here.\"]}\n                    buttonVariant=\"outlined\"\n                    buttonText=\"To Subscriptions\"\n                    >\n                        \n                    </ClickableCard>\n                </Grid>\n            );\n        }\n        return jsx;\n    }\n\n    return (\n        <div>\n        <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                Premium\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                Get premium and upgrade:\n                (list of important features)\n            </Typography>\n        </Container>\n        <Container className={classes.cards} maxWidth=\"md\" component=\"main\">\n            <Grid container spacing={5} alignItems=\"flex-end\">\n                {tierCardsJsx()}\n            </Grid>\n        </Container>\n        </div>\n    );\n}\n\nexport default Subscription;","import React, {useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {Jumbotron, Button} from \"react-bootstrap\";\nimport {executeQuery} from \"../utilities\";\n\nfunction Success({setTier=() => {}}) {\n    const [jsx, setJsx] = useState(<></>);\n    let history = useHistory();\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const sessionId = urlParams.get(\"session_id\");\n\n    function billingOnClick(e) {\n        e.preventDefault();\n        executeQuery({\n            path: '/stripeRoutes/customer-portal',\n            data: {},\n            onResponse: function(res) {\n                window.location.href = res.data.url;\n            }\n        })();\n    }\n\n    // eslint-disable-next-line\n    useEffect(executeQuery({\n        path: \"/stripeRoutes/checkout-session\",\n        data: {sessionId: sessionId},\n        onResponse: req => {\n            if (req.data) {\n                setJsx(\n                    <div>\n                        <Jumbotron className=\"bg-light text-primary\">\n                            <h1>Welcome to Plandid Premium</h1>\n                            <h5>You have successfully subscribed!</h5>\n                        </Jumbotron>\n                        <Button className=\"m-2\" onClick={() => {history.push(\"/Login\")}}>Login</Button>\n                        <Button className=\"m-2\" onClick={billingOnClick}>Billing</Button>\n                    </div>\n                );\n            }\n            else {\n                setJsx(\n                    <div>\n                        <Jumbotron className=\"bg-light text-primary\">\n                            <h1>Subscription Unsuccessfull</h1>\n                            <h5>Whoops! Something went wrong. Please try again.</h5>\n                        </Jumbotron>\n                        <Button className=\"m-2\" onClick={() => {history.push(\"/Login\")}}>Login</Button>\n                        <Button className=\"m-2\" onClick={() => {history.push(\"/Subscription\")}}>Get Premium</Button>\n                    </div>\n                );\n            }\n        }\n    }), []);\n\n    return jsx;\n}\n\nexport default Success;","import React, { useEffect, useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Landing from './Landing';\nimport Login from './Login';\nimport Policy from \"./Policy\";\nimport Calendar from './Calendar';\nimport People from './People';\nimport AppNav from './AppNav';\nimport Subscription from \"./Subscription\";\nimport Success from \"./Success\";\n\nimport { executeQuery } from '../utilities';\nimport config from '../config.json';\n\nfunction Basis() {\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [tier, setTier] = useState(config.freeTierName);\n\n    // eslint-disable-next-line\n    useEffect(executeQuery({path: \"/publicPost/isLoggedIn\", data: {}, onResponse: res => {\n        if (res.data) {\n            setLoggedIn(true);\n            executeQuery({path: \"/userData/getTier\", data: {}, onResponse: res => {setTier(res.data)}})();\n        }\n        else {\n            setLoggedIn(false);\n        }\n    }}), []);\n\n    // eslint-disable-next-line\n    useEffect(() => {\n        if (loggedIn) {\n            executeQuery({path: \"/userData/getTier\", data: {}, onResponse: res => {setTier(res.data)}})();\n        }\n    }, [loggedIn]);\n\n    if (loggedIn) {\n        return (\n            <div>\n                <AppNav tier={tier} setLoggedIn={setLoggedIn}/>\n                <Switch>\n                    <Route exact path=\"/Calendar\">\n                        <Calendar tier={tier}/>\n                    </Route>\n                    <Route exact path=\"/People\">\n                        <People />\n                    </Route>\n                    <Route exact path=\"/Subscription\">\n                        <Subscription currentTier={tier}/>\n                    </Route>\n                    <Route exact path=\"/Success*\">\n                        <Success />\n                    </Route>\n                    <Route exact path =\"/Login\">\n                        <Login loggedIn={loggedIn} setLoggedIn={setLoggedIn}/>\n                    </Route>\n                    {Policy()}\n                    <Route exact path=\"/*\">\n                        <Calendar />\n                    </Route>\n                </Switch>\n            </div>\n        );\n    }\n    else {\n        return (\n            <Switch>\n                <Route exact path =\"/Login\">\n                    <Login setLoggedIn={setLoggedIn}/>\n                </Route>\n                {Policy()}\n                <Route exact path=\"/*\">\n                    <Landing />\n                </Route>\n            </Switch>\n        );\n    }\n}\n\nexport default Basis;","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport config from './config.json';\n\nimport Basis from './components/Basis';\n// import './custom.scss';\nimport './App.css';\n\n// Material-ui\n// import 'fontsource-roboto';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: config.colors,\n});\n\n// Bootstrap\nfunction setColors() {\n    for (const color in config.colors) {\n        document.documentElement.style.setProperty(`--${color}`, config.colors[color]);\n    }\n}\n\ndocument.title = config.appName;\n\nfunction App() {\n    setColors();\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <ThemeProvider theme={theme}>\n                <Router>\n                    <Basis />\n                </Router>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}